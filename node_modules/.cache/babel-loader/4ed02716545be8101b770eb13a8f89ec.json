{"remainingRequest":"/Users/stanislaw/WebstormProjects/test/node_modules/babel-loader/lib/index.js!/Users/stanislaw/WebstormProjects/test/node_modules/eslint-loader/index.js??ref--13-0!/Users/stanislaw/WebstormProjects/test/src/store-components/PositionsVariables.js","dependencies":[{"path":"/Users/stanislaw/WebstormProjects/test/src/store-components/PositionsVariables.js","mtime":1545928081337},{"path":"/Users/stanislaw/WebstormProjects/test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stanislaw/WebstormProjects/test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/stanislaw/WebstormProjects/test/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var positions = {\n  state: {\n    isResize: true\n  },\n  mutations: {},\n  actions: {},\n  getters: {},\n  watch: {\n    isResize: function isResize(newV, oldV) {\n      console.log('ttt');\n\n      if (newV !== oldV) {\n        alert('true');\n        return true;\n      } else {\n        alert(\"false\");\n        return false;\n      }\n    }\n  }\n};\nexport { positions };",{"version":3,"sources":["/Users/stanislaw/WebstormProjects/test/src/store-components/PositionsVariables.js"],"names":["positions","state","isResize","mutations","actions","getters","watch","newV","oldV","console","log","alert"],"mappings":"AAAA,IAAMA,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP,GADO;AAIdC,EAAAA,SAAS,EAAE,EAJG;AAOdC,EAAAA,OAAO,EAAE,EAPK;AAUdC,EAAAA,OAAO,EAAE,EAVK;AAadC,EAAAA,KAAK,EAAE;AACHJ,IAAAA,QAAQ,EAAE,kBAAUK,IAAV,EAAgBC,IAAhB,EAAsB;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,UAAIH,IAAI,KAAKC,IAAb,EAAmB;AACfG,QAAAA,KAAK,CAAC,MAAD,CAAL;AACA,eAAO,IAAP;AACH,OAHD,MAGO;AACHA,QAAAA,KAAK,CAAC,OAAD,CAAL;AACA,eAAO,KAAP;AACH;AACJ;AAVE;AAbO,CAAlB;AA2BA,SAASX,SAAT","sourcesContent":["const positions = {\n    state: {\n        isResize: true\n    },\n    mutations: {\n\n    },\n    actions: {\n\n    },\n    getters: {\n\n    },\n    watch: {\n        isResize: function (newV, oldV) {\n            console.log('ttt');\n            if (newV !== oldV) {\n                alert('true');\n                return true;\n            } else {\n                alert(\"false\");\n                return false;\n            }\n        }\n    }\n};\n\nexport { positions }"]}]}