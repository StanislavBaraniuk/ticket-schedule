{"remainingRequest":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/thread-loader/dist/cjs.js!/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/babel-loader/lib/index.js!/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/eslint-loader/index.js??ref--13-0!/Users/stanislaw/WebstormProjects/ticket-schedule/src/store-components/TicketLoadVariables.js","dependencies":[{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/src/store-components/TicketLoadVariables.js","mtime":1547110301000},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nvar state = {\n  main_filter: {\n    FROM: \"\",\n    TO: \"\",\n    DATE: new Date().toJSON().slice(0, 10).replace(/-/g, '-'),\n    TRANSPORT: 1\n  },\n  new_ticket: {\n    dates: {\n      d_time: new Date().getHours() + \":\" + new Date().getMinutes(),\n      a_time: new Date().getHours() + \":\" + new Date().getMinutes(),\n      d_date: new Date().toJSON().slice(0, 10).replace(/-/g, '-'),\n      a_date: new Date().toJSON().slice(0, 10).replace(/-/g, '-')\n    },\n    name: null,\n    price: null // all_ways: [\"Киев\",\"Киев1\",\"Киев2\",\"Киев3\",\"Киев4\",\"Киев5\",\"Киев6\",\"Киев7\",\"Киев8\",\"Киев9\",\"Киев10\",\"Киев11\"],\n\n  }\n};\nvar getters = {\n  GET_TYPE: function GET_TYPE(state) {\n    return state.main_filter.TRANSPORT;\n  },\n  GET_FROM: function GET_FROM(state) {\n    return state.main_filter.FROM;\n  },\n  GET_TO: function GET_TO(state) {\n    return state.main_filter.TO;\n  },\n  GET_DATE: function GET_DATE(state) {\n    return state.main_filter.DATE;\n  },\n  GET_D_TIME: function GET_D_TIME(state) {\n    return state.new_ticket.dates.d_time;\n  },\n  GET_A_TIME: function GET_A_TIME(state) {\n    return state.new_ticket.dates.a_time;\n  },\n  GET_A_DATE: function GET_A_DATE(state) {\n    return state.new_ticket.dates.a_date;\n  },\n  GET_D_DATE: function GET_D_DATE(state) {\n    return state.new_ticket.dates.d_date;\n  },\n  GET_FILTER: function GET_FILTER(state) {\n    return state.main_filter;\n  }\n};\nvar mutations = {\n  SET_A_TIME: function SET_A_TIME(state, data) {\n    state.new_ticket.dates.a_time = data;\n  },\n  SET_A_DATE: function SET_A_DATE(state, data) {\n    state.new_ticket.dates.a_date = data;\n  },\n  SET_D_TIME: function SET_D_TIME(state, data) {\n    state.new_ticket.dates.d_time = data;\n  },\n  SET_D_DATE: function SET_D_DATE(state, data) {\n    state.new_ticket.dates.d_date = data;\n  },\n  SET_TYPE: function SET_TYPE(state, data) {\n    state.main_filter.TRANSPORT = data;\n  },\n  SET_FROM: function SET_FROM(state, data) {\n    state.main_filter.FROM = data;\n  },\n  SET_TO: function SET_TO(state, data) {\n    state.main_filter.TO = data;\n  },\n  SET_DATE: function SET_DATE(state, data) {\n    state.main_filter.DATE = data;\n  },\n  CLEAR_LIST: function CLEAR_LIST(state) {\n    state.list = [];\n  }\n};\nvar actions = {};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/Users/stanislaw/WebstormProjects/ticket-schedule/src/store-components/TicketLoadVariables.js"],"names":["state","main_filter","FROM","TO","DATE","Date","toJSON","slice","replace","TRANSPORT","new_ticket","dates","d_time","getHours","getMinutes","a_time","d_date","a_date","name","price","getters","GET_TYPE","GET_FROM","GET_TO","GET_DATE","GET_D_TIME","GET_A_TIME","GET_A_DATE","GET_D_DATE","GET_FILTER","mutations","SET_A_TIME","data","SET_A_DATE","SET_D_TIME","SET_D_DATE","SET_TYPE","SET_FROM","SET_TO","SET_DATE","CLEAR_LIST","list","actions"],"mappings":"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","sourcesContent":["const state = {\n\n    main_filter: {\n        FROM: \"\",\n        TO: \"\",\n        DATE: new Date().toJSON().slice(0,10).replace(/-/g,'-'),\n        TRANSPORT: 1,\n    },\n\n    new_ticket: {\n        dates: {\n            d_time: new Date().getHours() + \":\" + new Date().getMinutes(),\n            a_time: new Date().getHours() + \":\" + new Date().getMinutes(),\n            d_date: new Date().toJSON().slice(0,10).replace(/-/g,'-'),\n            a_date: new Date().toJSON().slice(0,10).replace(/-/g,'-'),\n        },\n        name: null,\n        price: null\n    }\n\n    // all_ways: [\"Киев\",\"Киев1\",\"Киев2\",\"Киев3\",\"Киев4\",\"Киев5\",\"Киев6\",\"Киев7\",\"Киев8\",\"Киев9\",\"Киев10\",\"Киев11\"],\n};\nconst getters = {\n    GET_TYPE: state => {\n        return state.main_filter.TRANSPORT;\n    },\n    GET_FROM: state => {\n        return state.main_filter.FROM;\n    },\n    GET_TO: state => {\n        return state.main_filter.TO;\n    },\n    GET_DATE: state => {\n        return state.main_filter.DATE;\n    },\n    GET_D_TIME: state => {\n        return state.new_ticket.dates.d_time\n    },\n    GET_A_TIME: state => {\n        return state.new_ticket.dates.a_time\n    },\n    GET_A_DATE: state => {\n        return state.new_ticket.dates.a_date\n    },\n    GET_D_DATE: state => {\n        return state.new_ticket.dates.d_date\n    },\n    GET_FILTER: state => {\n        return state.main_filter\n    }\n};\nconst mutations = {\n    SET_A_TIME (state, data) {\n        state.new_ticket.dates.a_time = data;\n    },\n    SET_A_DATE (state, data) {\n        state.new_ticket.dates.a_date = data;\n    },\n    SET_D_TIME (state, data) {\n        state.new_ticket.dates.d_time = data;\n    },\n    SET_D_DATE (state, data) {\n        state.new_ticket.dates.d_date = data;\n    },\n    SET_TYPE (state, data) {\n        state.main_filter.TRANSPORT =  data;\n    },\n    SET_FROM (state, data) {\n        state.main_filter.FROM = data;\n    },\n    SET_TO (state, data) {\n        state.main_filter.TO = data;\n    },\n    SET_DATE (state, data) {\n        state.main_filter.DATE = data;\n    },\n    CLEAR_LIST (state) {\n        state.list = [];\n    },\n};\nconst actions = {};\n\nexport default {\n    state,\n    getters,\n    mutations,\n    actions,\n};"]}]}