{"remainingRequest":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stanislaw/WebstormProjects/ticket-schedule/src/components/admin/tools/Users/components/UsersList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/src/components/admin/tools/Users/components/UsersList.vue","mtime":1547137665000},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport UserRedaction from './UserRedaction'\nimport { mapGetters } from 'vuex';\n\nexport default {\n    name: \"UsersList\",\n    components: {\n        UserRedaction\n    },\n    data: function () {\n        return {\n            activeRedactId: -1\n        }\n    },\n    methods: {\n        openRedact: function (id) {\n            this.activeRedactId = id;\n        },\n        remove (item) {\n            this.chips.splice(this.chips.indexOf(item), 1)\n            this.chips = [...this.chips]\n        }\n    },\n    props: {\n        stations:{\n\n        }\n    },\n    computed:{\n        ...mapGetters({\n            search_t: \"GET_ADMIN_SEARCH_TEXT\",\n            search_s: \"GET_ADMIN_SEARCH_SELECT\"\n        })\n    }\n}\n",{"version":3,"sources":["UsersList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UsersList.vue","sourceRoot":"src/components/admin/tools/Users/components","sourcesContent":["<template>\n    <v-expansion-panel class=\"users-list\">\n        <v-expansion-panel-content\n                v-for=\"(item,index) in stations.filter(function(obj) {\n                  return obj[search_s] == search_t || search_t.length < 1\n                })\"\n                :key=\"index\"\n        >\n            <div slot=\"header\">#{{ item.ID }} : {{ item.EMAIL }}</div>\n            <v-card>\n                <v-card-text class=\"info-block\" >\n                    <v-layout row wrap>\n                        <v-flex xs12 sm6 md2 lg1>Id: {{ item.ID }}</v-flex>\n                        <v-flex xs12 sm6 md2 lg1>Імя: {{ item.F_NAME }}</v-flex>\n                        <v-flex xs12 sm6 md2 lg1>Фамілія: {{ item.L_NAME }}</v-flex>\n                        <v-flex xs12 sm6 md2 lg1>Email: {{ item.EMAIL }}</v-flex>\n                        <v-flex xs12 sm6 md2 lg1>Стать: {{ item.SEX === 1 ? \"чоловік\" : item.SEX === 2 ? \"жінка\" : \"Не визначено\"}}</v-flex>\n                        <v-flex xs12 sm6 md2 lg1>Активність: {{ item.ONLINE ? \"online\" : \"offline\" }}</v-flex>\n                        <v-flex xs12 sm6 md2 lg1>Активне замовлення: {{ item.ORDER_ACTIVE ? item.ORDER_ID : \"відсутнє\" }}</v-flex>\n                        <v-flex xs12 sm6 md2 lg1>Аватар: {{ item.AVATAR }}</v-flex>\n                        <v-spacer></v-spacer>\n                        <v-flex xs12 sm12 md2 lg1><v-icon v-on:click=\"openRedact(item.ID)\">fas fa-pencil-ruler</v-icon><v-icon class=\"delete-icon\" >fas fa-trash</v-icon></v-flex>\n                    </v-layout>\n                </v-card-text>\n            </v-card>\n            <user-redaction :f=\"{v: openRedact}\" :activeRedactId=\"{v: activeRedactId}\" :item=\"item\"></user-redaction>\n        </v-expansion-panel-content>\n    </v-expansion-panel>\n</template>\n\n<script>\n    import UserRedaction from './UserRedaction'\n    import { mapGetters } from 'vuex';\n\n    export default {\n        name: \"UsersList\",\n        components: {\n            UserRedaction\n        },\n        data: function () {\n            return {\n                activeRedactId: -1\n            }\n        },\n        methods: {\n            openRedact: function (id) {\n                this.activeRedactId = id;\n            },\n            remove (item) {\n                this.chips.splice(this.chips.indexOf(item), 1)\n                this.chips = [...this.chips]\n            }\n        },\n        props: {\n            stations:{\n\n            }\n        },\n        computed:{\n            ...mapGetters({\n                search_t: \"GET_ADMIN_SEARCH_TEXT\",\n                search_s: \"GET_ADMIN_SEARCH_SELECT\"\n            })\n        }\n    }\n</script>\n\n<style lang=\"sass\" scoped>\n    .users-list\n        margin-top: 20px\n\n        .info-block\n            margin-left: 20px\n\n            .delete-icon\n                padding-left: 20px\n</style>"]}]}