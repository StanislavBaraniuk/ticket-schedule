{"remainingRequest":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stanislaw/WebstormProjects/ticket-schedule/src/components/admin/tools/ToolTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/src/components/admin/tools/ToolTab.vue","mtime":1550568332379},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/cache-loader/dist/cjs.js","mtime":1547214326837},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/babel-loader/lib/index.js","mtime":1547214326591},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/cache-loader/dist/cjs.js","mtime":1547214326837},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/vue-loader/lib/index.js","mtime":1547214332895}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex';\nimport TicketMenu from './Ticket/TicketMenu';\nimport CityMenu from './City/CityMenu';\nimport UsersMenu from './Users/UsersMenu';\nimport SiteMenu from './Site/SiteMenu';\nimport OrdersMenu from \"./Orders/OrdersMenu\";\nimport preloader from \"../../preloader/Preloader\"\n\nexport default {\n    name: \"ToolTab\",\n    components: {\n        OrdersMenu,\n        UsersMenu,\n        TicketMenu,\n        CityMenu,\n        SiteMenu,\n        preloader\n    },\n    data () {\n        return {\n            menu_a: false,\n            modal_a: false,\n            menu_d: false,\n            modal_d: false,\n            activeBlock: 0,\n            load_text: ''\n        }\n    },\n    created() {\n        let url = window.location.href.split('/');\n        let uri = url[url.length-1];\n        let element_path = uri.split('?');\n\n        switch (element_path[1].split('=')[1]) {\n            case 'tickets' :\n                this.activeBlock = 0;\n                break;\n            case 'stations' :\n                this.activeBlock = 1;\n                break;\n            case 'users' :\n                this.activeBlock = 2;\n                break;\n            case 'orders' :\n                this.activeBlock = 3;\n                break;\n            case 'site' :\n                this.activeBlock = 4;\n                break;\n            default:\n                this.activeBlock = 0;\n                break;\n        }\n\n        let token = window.api.storage.getToken();\n\n        this.LOAD_COLUMNS(this, token, \"tickets\", 0);\n        this.LOAD_COLUMNS(this, token, \"stations\", 1);\n        this.LOAD_COLUMNS(this, token, \"users\", 2);\n        this.LOAD_COLUMNS(this, token, \"orders\", 3);\n        this.LOAD_COLUMNS(this, token, \"setting\", 4);\n\n        this.GET_STATIONS(this, token);\n        this.LOAD_TICKETS(this, token);\n        this.LOAD_USERS(this, token);\n        this.LOAD_ORDERS(this, token);\n        this.LOAD_STATIONS_WITH_KEY(this, token);\n\n    },\n    methods: {\n        openNewTab: function (url) {\n            window.open(url, '_blank');\n        },\n        setActiveBlock: function (index) {\n            this.activeBlock = index;\n            switch (index) {\n                case 0 :\n                    history.replaceState({} , \"tools\", \"?tools=tickets\");\n                    break;\n                case 1 :\n                    history.replaceState({} , \"tools\", \"?tools=stations\");\n                    break;\n                case 2 :\n                    history.replaceState({} , \"tools\", \"?tools=users\");\n                    break;\n                case 3 :\n                    history.replaceState({} , \"tools\", \"?tools=orders\");\n                    break;\n                case 4 :\n                    history.replaceState({} , \"tools\", \"?tools=site\");\n                    break;\n            }\n        },\n        GET_STATIONS: async (component, token) => {\n            {\n                let data = await window.api.stations.getAll(token);\n\n\n                if (data.status === 200) {\n                    component.stations  = Object.values(data.data);\n\n                    component.$store.commit('SET_STATIONS',component.stations);\n                }\n            }\n        },\n        LOAD_TICKETS: function (component, token) {\n            this.GET_ALL_TICKETS(component, token).then(function (res) {\n                if (res.data !== undefined) {\n                    res.this.$store.dispatch(\"SET_TICKETS\", res.data);\n                }\n            });\n        },\n        GET_ALL_TICKETS: async (component, token) => {\n            {\n                let data = await window.api.ticket.getAll(token);\n\n                if (data.status === 200) {\n                    return  {this: component, data: data.data};\n                } else {\n                    return {this: component, data: undefined};\n                }\n            }\n        },\n        LOAD_USERS: async (component, token) => {\n            {\n                let data = await window.api.client.getAll(token);\n\n                if (data.status === 200) {\n                    component.$store.commit('SET_USER_LIST', data.data);\n                }\n            }\n        },\n        LOAD_COLUMNS: async (component, token, table_name, key) => {\n            let value = await window.api.user.getColumns(token, table_name);\n\n            component.$store.dispatch('ADD_ADMIN_SEARCH', {key: key, value: value.data});\n        },\n        LOAD_ORDERS: async (component, token) => {\n            let value = await window.api.order.getAll(token);\n\n            component.$store.dispatch('SET_ORDERS', value.data);\n        },\n        LOAD_STATIONS_WITH_KEY: async (component, token) => {\n            {\n                let data = await window.api.stations.getWithKeys(token);\n\n\n                if (data.status === 200) {\n                    component.$store.commit('SET_STATIONS_LIST', data.data);\n                }\n            }\n        }\n    },\n    computed: {\n        text: {\n            get () {\n                return this.search_t;\n            },\n            set (value) {\n                this.$store.commit('SET_ADMIN_SEARCH_TEXT', value)\n            }\n        },\n        select: {\n            get () {\n                return this.search_s;\n            },\n            set (value) {\n                this.$store.commit('SET_ADMIN_SEARCH_SELECT', value)\n            }\n        },\n        ...mapGetters({\n            isActive: \"IS_BLOCK_LOADER\",\n            def_tickets: 'GET_ALL_TICKETS',\n            def_stations: 'GET_STATIONS',\n            def_stations_list: \"GET_STATIONS_LIST\",\n            def_stations_way: 'GET_STATIONS_WAY',\n            def_user_list: 'GET_USER_LIST',\n            site_status: 'GET_SITE_STATUS',\n            def_orders: 'GET_ORDERS',\n            search: \"GET_ADMIN_SEARCH\",\n            search_t: \"GET_ADMIN_SEARCH_TEXT\",\n            search_s: \"GET_ADMIN_SEARCH_SELECT\"\n        }),\n    }\n\n}\n",{"version":3,"sources":["ToolTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"ToolTab.vue","sourceRoot":"src/components/admin/tools","sourcesContent":["<template>\n    <v-container class=\"tool-block\">\n        <v-layout row wrap style=\"max-width: 100vw !important;\">\n            <v-container style=\"max-width: 100vw !important;\">\n                <v-card\n                        dark\n                        color=\"indigo\"\n                        flat\n                >\n                    <v-layout row wrap>\n                        <v-flex xs12 sm12 md12 lg12 class=\"search\"><h3>Пошук</h3></v-flex>\n                        <v-flex xs10 sm5 md5 lg5 offset-xs1>\n                            <v-autocomplete\n                                    :items=\"search[activeBlock]\"\n                                    :readonly=\"false\"\n                                    v-model=\"select\"\n                                    flat\n                                    hide-no-data\n                                    hide-details\n                                    label=\"Оберіть критерій\"\n                                    solo-inverted\n                                    class=\"search-select\"\n                            ></v-autocomplete>\n                        </v-flex>\n                        <v-flex xs10 sm5 md5 lg5 offset-xs1 offset-sm0>\n                            <v-text-field\n                                    v-model=\"text\"\n                                    cache-items\n                                    class=\"mx-2\"\n                                    flat\n                                    hide-no-data\n                                    hide-details\n                                    label=\"Пошук...\"\n                                    solo-inverted\n                            ></v-text-field>\n                        </v-flex>\n\n                        <v-spacer></v-spacer>\n\n                        <v-flex xs12 sm12 md12 lg12 >\n                            <v-btn :class=\"{activeBtnMenu: activeBlock === 0}\" flat @click=\"setActiveBlock(0)\">квитки       <v-icon class=\"menu-arrow\" v-on:click=\"openNewTab('/admin?tools=tickets')\">fas fa-external-link-square-alt</v-icon></v-btn>\n                            <v-btn :class=\"{activeBtnMenu: activeBlock === 1}\" flat @click=\"setActiveBlock(1)\">міста        <v-icon class=\"menu-arrow\" v-on:click=\"openNewTab('/admin?tools=stations')\">fas fa-external-link-square-alt</v-icon></v-btn>\n                            <v-btn :class=\"{activeBtnMenu: activeBlock === 2}\" flat @click=\"setActiveBlock(2)\">користувачі  <v-icon class=\"menu-arrow\" v-on:click=\"openNewTab('/admin?tools=users')\">fas fa-external-link-square-alt</v-icon></v-btn>\n                            <v-btn :class=\"{activeBtnMenu: activeBlock === 3}\" flat @click=\"setActiveBlock(3)\">замовлення   <v-icon class=\"menu-arrow\" v-on:click=\"openNewTab('/admin?tools=orders')\">fas fa-external-link-square-alt</v-icon></v-btn>\n                            <!--<v-btn :class=\"{activeBtnMenu: activeBlock === 4}\" flat @click=\"setActiveBlock(4)\">сайт</v-btn>-->\n                        </v-flex>\n\n                        <p style=\"width: 100%; text-align: center\">{{ load_text }}</p>\n                    </v-layout>\n                </v-card>\n            </v-container>\n\n            <ticket-menu v-if=\"activeBlock === 0\" :items=\"def_stations_list\" :tickets=\"def_tickets\" style=\"max-width: 100vw !important;\"></ticket-menu>\n\n            <city-menu v-if=\"activeBlock === 1\" :stations=\"def_stations_list\" style=\"max-width: 100vw !important;\"></city-menu>\n\n            <users-menu v-if=\"activeBlock === 2\" :stations=\"def_user_list\" style=\"max-width: 100vw !important;\"></users-menu>\n\n            <orders-menu v-if=\"activeBlock === 3\" :stations=\"def_stations\" :orders=\"def_orders\" :tickets=\"def_tickets\" :users=\"def_user_list\" style=\"max-width: 100vw !important;\"></orders-menu>\n\n            <!--<site-menu v-if=\"activeBlock === 4 && isActive['tools']\" :status=\"{v: site_status}\" style=\"max-width: 100vw !important;\"></site-menu>-->\n\n        </v-layout>\n    </v-container>\n</template>\n\n<script>\n    import { mapGetters } from 'vuex';\n    import TicketMenu from './Ticket/TicketMenu';\n    import CityMenu from './City/CityMenu';\n    import UsersMenu from './Users/UsersMenu';\n    import SiteMenu from './Site/SiteMenu';\n    import OrdersMenu from \"./Orders/OrdersMenu\";\n    import preloader from \"../../preloader/Preloader\"\n\n    export default {\n        name: \"ToolTab\",\n        components: {\n            OrdersMenu,\n            UsersMenu,\n            TicketMenu,\n            CityMenu,\n            SiteMenu,\n            preloader\n        },\n        data () {\n            return {\n                menu_a: false,\n                modal_a: false,\n                menu_d: false,\n                modal_d: false,\n                activeBlock: 0,\n                load_text: ''\n            }\n        },\n        created() {\n            let url = window.location.href.split('/');\n            let uri = url[url.length-1];\n            let element_path = uri.split('?');\n\n            switch (element_path[1].split('=')[1]) {\n                case 'tickets' :\n                    this.activeBlock = 0;\n                    break;\n                case 'stations' :\n                    this.activeBlock = 1;\n                    break;\n                case 'users' :\n                    this.activeBlock = 2;\n                    break;\n                case 'orders' :\n                    this.activeBlock = 3;\n                    break;\n                case 'site' :\n                    this.activeBlock = 4;\n                    break;\n                default:\n                    this.activeBlock = 0;\n                    break;\n            }\n\n            let token = window.api.storage.getToken();\n\n            this.LOAD_COLUMNS(this, token, \"tickets\", 0);\n            this.LOAD_COLUMNS(this, token, \"stations\", 1);\n            this.LOAD_COLUMNS(this, token, \"users\", 2);\n            this.LOAD_COLUMNS(this, token, \"orders\", 3);\n            this.LOAD_COLUMNS(this, token, \"setting\", 4);\n\n            this.GET_STATIONS(this, token);\n            this.LOAD_TICKETS(this, token);\n            this.LOAD_USERS(this, token);\n            this.LOAD_ORDERS(this, token);\n            this.LOAD_STATIONS_WITH_KEY(this, token);\n\n        },\n        methods: {\n            openNewTab: function (url) {\n                window.open(url, '_blank');\n            },\n            setActiveBlock: function (index) {\n                this.activeBlock = index;\n                switch (index) {\n                    case 0 :\n                        history.replaceState({} , \"tools\", \"?tools=tickets\");\n                        break;\n                    case 1 :\n                        history.replaceState({} , \"tools\", \"?tools=stations\");\n                        break;\n                    case 2 :\n                        history.replaceState({} , \"tools\", \"?tools=users\");\n                        break;\n                    case 3 :\n                        history.replaceState({} , \"tools\", \"?tools=orders\");\n                        break;\n                    case 4 :\n                        history.replaceState({} , \"tools\", \"?tools=site\");\n                        break;\n                }\n            },\n            GET_STATIONS: async (component, token) => {\n                {\n                    let data = await window.api.stations.getAll(token);\n\n\n                    if (data.status === 200) {\n                        component.stations  = Object.values(data.data);\n\n                        component.$store.commit('SET_STATIONS',component.stations);\n                    }\n                }\n            },\n            LOAD_TICKETS: function (component, token) {\n                this.GET_ALL_TICKETS(component, token).then(function (res) {\n                    if (res.data !== undefined) {\n                        res.this.$store.dispatch(\"SET_TICKETS\", res.data);\n                    }\n                });\n            },\n            GET_ALL_TICKETS: async (component, token) => {\n                {\n                    let data = await window.api.ticket.getAll(token);\n\n                    if (data.status === 200) {\n                        return  {this: component, data: data.data};\n                    } else {\n                        return {this: component, data: undefined};\n                    }\n                }\n            },\n            LOAD_USERS: async (component, token) => {\n                {\n                    let data = await window.api.client.getAll(token);\n\n                    if (data.status === 200) {\n                        component.$store.commit('SET_USER_LIST', data.data);\n                    }\n                }\n            },\n            LOAD_COLUMNS: async (component, token, table_name, key) => {\n                let value = await window.api.user.getColumns(token, table_name);\n\n                component.$store.dispatch('ADD_ADMIN_SEARCH', {key: key, value: value.data});\n            },\n            LOAD_ORDERS: async (component, token) => {\n                let value = await window.api.order.getAll(token);\n\n                component.$store.dispatch('SET_ORDERS', value.data);\n            },\n            LOAD_STATIONS_WITH_KEY: async (component, token) => {\n                {\n                    let data = await window.api.stations.getWithKeys(token);\n\n\n                    if (data.status === 200) {\n                        component.$store.commit('SET_STATIONS_LIST', data.data);\n                    }\n                }\n            }\n        },\n        computed: {\n            text: {\n                get () {\n                    return this.search_t;\n                },\n                set (value) {\n                    this.$store.commit('SET_ADMIN_SEARCH_TEXT', value)\n                }\n            },\n            select: {\n                get () {\n                    return this.search_s;\n                },\n                set (value) {\n                    this.$store.commit('SET_ADMIN_SEARCH_SELECT', value)\n                }\n            },\n            ...mapGetters({\n                isActive: \"IS_BLOCK_LOADER\",\n                def_tickets: 'GET_ALL_TICKETS',\n                def_stations: 'GET_STATIONS',\n                def_stations_list: \"GET_STATIONS_LIST\",\n                def_stations_way: 'GET_STATIONS_WAY',\n                def_user_list: 'GET_USER_LIST',\n                site_status: 'GET_SITE_STATUS',\n                def_orders: 'GET_ORDERS',\n                search: \"GET_ADMIN_SEARCH\",\n                search_t: \"GET_ADMIN_SEARCH_TEXT\",\n                search_s: \"GET_ADMIN_SEARCH_SELECT\"\n            }),\n        }\n\n    }\n</script>\n\n<style lang=\"sass\" >\n        .activeBtn\n            background-color: #00b33f\n            color: white !important\n            /*width: 1050px*/\n\n        .activeBtnMenu\n            background-color: white\n            color: #3d4dbc !important\n\n        .search\n            padding-top: 15px\n\n        .search-select\n            width: 100%\n\n        .menu-arrow\n            width: 25px\n            margin-left: 10px\n</style>"]}]}