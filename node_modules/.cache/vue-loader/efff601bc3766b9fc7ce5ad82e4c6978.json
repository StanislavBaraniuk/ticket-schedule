{"remainingRequest":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stanislaw/WebstormProjects/ticket-schedule/src/components/index/ContentBlock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/src/components/index/ContentBlock.vue","mtime":1550651255151},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/babel-loader/lib/index.js","mtime":1547214326591},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/cache-loader/dist/cjs.js","mtime":1547214326837},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/vue-loader/lib/index.js","mtime":1547214332895}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex';\nimport BlockPreloader from '../preloader/BlockPreloader'\n\nexport default {\n    name: \"ContentBlock\",\n    data: () => ({\n        place: [],\n        snackbar: {\n            text: \"TEst test test\",\n            model: false,\n            y: 'top',\n            x: null,\n            mode: '',\n            timeout: 5000\n        }\n    }),\n    components: {\n        BlockPreloader\n    },\n    methods: {\n        make_order: function (id, index, from_place, to_place) {\n            if (this.place[index] !== undefined) {\n                this.SEND_ORDER(this,window.api.storage.getToken(), id, this.current_user.ID, this.tickets[index].PRICE, this.place[index], index, from_place, to_place);\n            } else {\n                this.snackbar.model = true;\n                this.snackbar.text = \"Оберіть місце\";\n            }\n        },\n        SEND_ORDER: async (component, token, ticket_id, user_id, cost, place, index, from_place, to_place) => {\n            {\n                let data = await window.api.user.createOrder(token, ticket_id, user_id, cost, place, from_place, to_place);\n\n                component.snackbar.model = true;\n                if (data.status === 200) {\n                    component.snackbar.text = \"Квиток надіслано на ваш e-mail :)\";\n                    delete component.place[index];\n                    component.tickets[index].PLACES.splice(component.tickets[index].PLACES.indexOf(place), 1);\n                    if (component.tickets.filter(function(value) { return value.PLACES.length > 0}).length < 1) {\n                        component.$store.dispatch('SET_ACTIVE_PAGE');\n                    }\n                } else if (data.status === 401) {\n                    component.snackbar.text = \"Авторизуйтесь для створення замовлення\";\n                } else {\n                    component.snackbar.text = \"Помилка, спробуйте ще раз :(\";\n                }\n            }\n        }\n    },\n    computed: {\n        ...mapGetters({\n            tickets: \"GET_ALL_TICKETS\",\n            filter: \"GET_FILTER\",\n            isActive: \"GET_IS_ACTIVE\",\n            stations: 'GET_STATIONS',\n            current_user: \"GET_CURRENT_USER\"\n        })\n    }\n}\n",{"version":3,"sources":["ContentBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ContentBlock.vue","sourceRoot":"src/components/index","sourcesContent":["<template>\n    <v-container class=\"content-block\">\n        <v-snackbar\n                v-model=\"snackbar.model\"\n                :bottom=\"snackbar.y === 'bottom'\"\n                :left=\"snackbar.x === 'left'\"\n                :multi-line=\"snackbar.mode === 'multi-line'\"\n                :right=\"snackbar.x === 'right'\"\n                :timeout=\"snackbar.timeout\"\n                :top=\"snackbar.y === 'top'\"\n                :vertical=\"snackbar.mode === 'vertical'\"\n        >\n            {{ snackbar.text }}\n            <v-btn\n                    color=\"pink\"\n                    flat\n                    @click=\"snackbar.model = false\"\n            >\n                Close\n            </v-btn>\n        </v-snackbar>\n        <div v-if=\"!isActive\" class=\"transp-block\">\n\n        </div>\n        <v-container v-if=\"isActive\" grid-list-md text-xs-center class=\"inside-container\">\n            <v-layout row wrap>\n                <v-flex xs12 sm12 md12 lg8 offset-lg2  v-for=\" (item , index) in tickets\" :key=\"index\">\n                    <v-card class=\"inside-card\" v-if=\"item.PLACES.length > 0 && item.PLACES[0] !== ''\">\n                        <v-container grid-list-md text-xs-center class=\"inside-container-inside\">\n                            <v-layout row wrap>\n                                <v-flex xs12 sm6 md6 lg6>\n                                    <v-card-title>\n                                        <v-flex xs12 sm1 md1 lg1>\n                                            <i class=\"material-icons type-icon\">{{ item.TYPE === 1 ? \"directions_railway\" : \"directions_bus\"}}</i>\n                                        </v-flex>\n                                        <v-flex xs12 sm11 md11 lg11>\n                                            <h3 class=\"name\">{{ item.NAME }}</h3>\n                                        </v-flex>\n                                    </v-card-title>\n                                </v-flex>\n                                <v-flex xs12 sm6 md6 lg6>\n                                    <v-card-actions class=\"order-btn-block\">\n                                        <v-spacer></v-spacer>\n                                        <v-btn disabled color=\"orange\" class=\"price\">{{ item.PRICE }} ₴</v-btn>\n                                        <v-btn color=\"green\" dark v-on:click=\"make_order(item.ID, index, item.FROM_PLACE, item.TO_PLACE)\">Забронювати\n                                            <v-icon dark right>add_shopping_cart</v-icon>\n                                        </v-btn>\n                                    </v-card-actions>\n                                </v-flex>\n                                <v-flex xs12>\n                                    <v-autocomplete\n                                            class=\"place\"\n                                            label=\"Місце\"\n                                            :items=\"item.PLACES\"\n                                            placeholder=\"Оберіть місце\"\n                                            append-icon=\"fas fa-ticket-alt\"\n                                            v-model=\"place[index]\"\n                                    ></v-autocomplete>\n                                </v-flex>\n                                <!--s{{ stations }}-->\n                                <v-flex xs12 sm6 md6 lg6>\n                                    <v-stepper vertical class=\"positions\">\n                                        <v-stepper-step complete=\"\" complete-icon=\"\">\n                                            {{ stations[item.FROM_PLACE-1] }}\n                                            <small>Відправлення о {{ item.FROM_TIME | timeNormalizer }}</small>\n                                        </v-stepper-step>\n\n                                        <v-stepper-content >\n\n                                        </v-stepper-content>\n\n                                        <v-stepper-step complete=\"\" complete-icon=\"\">\n                                            {{ item.WAY_TIME | timeNormalizer }}\n                                            <small>час у дорозі</small>\n                                        </v-stepper-step>\n\n                                        <v-stepper-content>\n\n                                        </v-stepper-content>\n\n                                        <v-stepper-step complete=\"\" complete-icon=\"\">\n                                            {{   stations[item.TO_PLACE-1] }}\n                                            <small>Прибуття о {{ item.TO_TIME | timeNormalizer }}</small>\n                                        </v-stepper-step>\n                                    </v-stepper>\n                                </v-flex>\n                                <v-flex xs12 sm6 md6 lg6>\n                                    Маршрут\n                                    <v-stepper vertical class=\"stations\">\n                                        <v-stepper-step complete=\"\" complete-icon=\"\" v-for=\"(state, s_index) in item.STATIONS\" :key=\"s_index\">\n                                            {{ stations[state-1] }}\n                                            <small>Зупинка</small>\n                                        </v-stepper-step>\n\n                                        <v-stepper-content >\n\n                                        </v-stepper-content>\n                                    </v-stepper>\n                                </v-flex>\n                            </v-layout>\n                        </v-container>\n                    </v-card>\n                </v-flex>\n            </v-layout>\n        </v-container>\n\n        <block-preloader v-if=\"isActive\" location=\"contentBlock\" color=\"#fafafa\"></block-preloader>\n        <v-container class=\"not-found-block\" v-if=\"tickets.filter(function(item) {return item.PLACES.length > 0 && item.PLACES[0] !== ''; }).length < 1  && isActive\" grid-list-md text-xs-center style=\"padding: 0px\">\n            <v-layout row wrap>\n                <v-flex xs12 sm12 md12 lg8 offset-lg2>\n                    <div class=\"text-xs-center mt6vh\">\n                        <v-chip text-color=\"white\" class=\"not-found\">\n                            <h1>Квитків не знайдено</h1>\n                        </v-chip>\n                    </div>\n                </v-flex>\n            </v-layout>\n        </v-container>\n    </v-container>\n</template>\n\n<script>\n    import { mapGetters } from 'vuex';\n    import BlockPreloader from '../preloader/BlockPreloader'\n\n    export default {\n        name: \"ContentBlock\",\n        data: () => ({\n            place: [],\n            snackbar: {\n                text: \"TEst test test\",\n                model: false,\n                y: 'top',\n                x: null,\n                mode: '',\n                timeout: 5000\n            }\n        }),\n        components: {\n            BlockPreloader\n        },\n        methods: {\n            make_order: function (id, index, from_place, to_place) {\n                if (this.place[index] !== undefined) {\n                    this.SEND_ORDER(this,window.api.storage.getToken(), id, this.current_user.ID, this.tickets[index].PRICE, this.place[index], index, from_place, to_place);\n                } else {\n                    this.snackbar.model = true;\n                    this.snackbar.text = \"Оберіть місце\";\n                }\n            },\n            SEND_ORDER: async (component, token, ticket_id, user_id, cost, place, index, from_place, to_place) => {\n                {\n                    let data = await window.api.user.createOrder(token, ticket_id, user_id, cost, place, from_place, to_place);\n\n                    component.snackbar.model = true;\n                    if (data.status === 200) {\n                        component.snackbar.text = \"Квиток надіслано на ваш e-mail :)\";\n                        delete component.place[index];\n                        component.tickets[index].PLACES.splice(component.tickets[index].PLACES.indexOf(place), 1);\n                        if (component.tickets.filter(function(value) { return value.PLACES.length > 0}).length < 1) {\n                            component.$store.dispatch('SET_ACTIVE_PAGE');\n                        }\n                    } else if (data.status === 401) {\n                        component.snackbar.text = \"Авторизуйтесь для створення замовлення\";\n                    } else {\n                        component.snackbar.text = \"Помилка, спробуйте ще раз :(\";\n                    }\n                }\n            }\n        },\n        computed: {\n            ...mapGetters({\n                tickets: \"GET_ALL_TICKETS\",\n                filter: \"GET_FILTER\",\n                isActive: \"GET_IS_ACTIVE\",\n                stations: 'GET_STATIONS',\n                current_user: \"GET_CURRENT_USER\"\n            })\n        }\n    }\n</script>\n\n<style lang=\"sass\" scoped>\n    .content-block\n        margin-top: -50px\n\n        .transp-block\n            position: absolute\n            width: 100%\n            margin-right: auto\n            margin-left: auto\n\n        .inside-container\n            padding: 0\n\n            .inside-card\n                margin-top: 20px\n\n                .inside-container-inside\n                    padding: 10px 0 0\n\n                    .type-icon\n                        margin-left: 8px\n                        margin-top: 10px\n\n                .name\n                    margin-left: 10px\n\n                .order-btn-block\n                    padding-right: 20px\n\n                    .price\n                        font-size: 20px\n                        color: black !important\n\n                .positions\n                    height: 260px\n                    box-shadow: none\n\n                .stations\n                    height: 260px\n                    overflow-y: scroll\n                    box-shadow: none\n\n    .mt6vh\n        margin-top: 12vh\n\n    .not-found\n        font-size: 8px !important\n        background-color: #9f9f9f\n        color: white\n        padding: 10px\n\n    .not-found-block\n        z-index: 1 !important\n        height: 30vh\n\n    .place\n        width: 95%\n        margin-left: 2.5%\n\n</style>"]}]}