{"remainingRequest":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stanislaw/WebstormProjects/ticket-schedule/src/components/admin/statistic/StatisticTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/src/components/admin/statistic/StatisticTab.vue","mtime":1550351432347},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/babel-loader/lib/index.js","mtime":1547214326591},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/cache-loader/dist/cjs.js","mtime":1547214326837},{"path":"/Users/stanislaw/WebstormProjects/ticket-schedule/node_modules/vue-loader/lib/index.js","mtime":1547214332895}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex';\nimport Count from \"./components/CountInfo\";\n\nexport default {\n    name: \"StatisticTab\",\n    components: {\n            Count\n    },\n    data: () => ({\n\n    }),\n    created() {\n            window.api.statistic.from = '1900-01-01';\n            window.api.statistic.to = new Date().toJSON().slice(0,10).replace(/-/g,'-');\n\n            let token = window.api.storage.getToken();\n\n            this.LOAD_PROFIT(this, token);\n            this.LOAD_ORDER_COUNT(this, token);\n            this.LOAD_USERS(this, token);\n            this.LOAD_USERS_ONLINE(this, token);\n    },\n    computed: {\n            ...mapGetters({\n                    def_profit_list: 'GET_STATISTIC_PROFIT_LIST',\n                    def_sales_list: 'GET_STATISTIC_SALES_LIST',\n                    def_users: 'GET_STATISTIC_USER_LIST',\n                    def_users_online: 'GET_STATISTIC_USER_ONLINE'\n            })\n    },\n    methods: {\n            LOAD_PROFIT: async (component, token) => {\n                    let resp =  await window.api.statistic.order.getProfit(token);\n\n                    if (resp.status === 200) {\n                            component.$store.dispatch(\"SET_STATISTIC_PROFIT_LIST\", resp.data);\n                    } else {\n                            component.$store.dispatch(\"SET_STATISTIC_PROFIT_LIST\", {DATES: [\"0\"], VAL: [0]});\n                    }\n\n            },\n            LOAD_ORDER_COUNT: async (component, token) => {\n                    let resp =  await window.api.statistic.order.getCount(token);\n\n                    if (resp.status === 200) {\n                            component.$store.dispatch(\"SET_STATISTIC_SALES_LIST\", resp.data);\n                    } else {\n                            component.$store.dispatch(\"SET_STATISTIC_SALES_LIST\", {DATES: [\"0\"], VAL: [0]});\n                    }\n            },\n            LOAD_USERS: async (component, token) => {\n                    let resp =  await window.api.statistic.client.getCount(token);\n\n                    component.$store.dispatch(\"SET_STATISTIC_USER_LIST\", resp.data);\n\n                    await window.api.helper.sleep(1000);\n                    component.LOAD_USERS(component, token);\n            },\n            LOAD_USERS_ONLINE: async (component, token) => {\n                    let resp =  await window.api.statistic.client.getCountOnline(token);\n\n                    component.$store.dispatch(\"SET_STATISTIC_USER_ONLINE\", resp.data);\n\n                    await window.api.helper.sleep(1000);\n                    component.LOAD_USERS_ONLINE(component, token);\n            }\n    }\n};\n",{"version":3,"sources":["StatisticTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"StatisticTab.vue","sourceRoot":"src/components/admin/statistic","sourcesContent":["<template>\n        <v-container grid-list-md text-xs-center class=\"tool-block\">\n                <v-layout row wrap>\n                        <v-flex xs12 sm12 md6 lg6>\n                                <count v-bind:list=\"def_profit_list.VAL.map(function(value) { return parseInt(value); })\" title=\"Прибуток\" symbol=\"₴\" v-bind:time-lapse=\"def_profit_list.DATES\"></count>\n                        </v-flex>\n                        <v-flex xs12 sm12 md6 lg6>\n                                <count v-bind:list=\"def_sales_list.VAL.map(function(value) { return parseInt(value); })\" title=\"Продажі\"  symbol=\"Загалом \" v-bind:time-lapse=\"def_sales_list.DATES\"></count>\n                        </v-flex>\n                        <v-flex xs12 sm6 md6 lg6>\n                                <v-card style=\"height: 160px; overflow-x: scroll; overflow-y: hidden\">\n                                        <v-card-text style=\"font-size: 20px; margin-top: 25px\">\n                                                <p>Користувачів</p>\n                                                <p>{{ def_users }}</p>\n                                        </v-card-text>\n                                </v-card>\n                        </v-flex>\n                        <v-flex xs12 sm6 md6 lg6>\n                                <v-card style=\"height: 160px; overflow-x: scroll; overflow-y: hidden\">\n                                        <v-card-text style=\"font-size: 20px; margin-top: 15px\">\n                                                <p>Користувачів</p>\n                                                <p style=\"font-size: 15px; margin-top: -20px\">online</p>\n                                                <p>{{ def_users_online }}</p>\n                                        </v-card-text>\n                                </v-card>\n                        </v-flex>\n                </v-layout>\n        </v-container>\n</template>\n\n<script>\n        import { mapGetters } from 'vuex';\n        import Count from \"./components/CountInfo\";\n\n        export default {\n            name: \"StatisticTab\",\n            components: {\n                    Count\n            },\n            data: () => ({\n\n            }),\n            created() {\n                    window.api.statistic.from = '1900-01-01';\n                    window.api.statistic.to = new Date().toJSON().slice(0,10).replace(/-/g,'-');\n\n                    let token = window.api.storage.getToken();\n\n                    this.LOAD_PROFIT(this, token);\n                    this.LOAD_ORDER_COUNT(this, token);\n                    this.LOAD_USERS(this, token);\n                    this.LOAD_USERS_ONLINE(this, token);\n            },\n            computed: {\n                    ...mapGetters({\n                            def_profit_list: 'GET_STATISTIC_PROFIT_LIST',\n                            def_sales_list: 'GET_STATISTIC_SALES_LIST',\n                            def_users: 'GET_STATISTIC_USER_LIST',\n                            def_users_online: 'GET_STATISTIC_USER_ONLINE'\n                    })\n            },\n            methods: {\n                    LOAD_PROFIT: async (component, token) => {\n                            let resp =  await window.api.statistic.order.getProfit(token);\n\n                            if (resp.status === 200) {\n                                    component.$store.dispatch(\"SET_STATISTIC_PROFIT_LIST\", resp.data);\n                            } else {\n                                    component.$store.dispatch(\"SET_STATISTIC_PROFIT_LIST\", {DATES: [\"0\"], VAL: [0]});\n                            }\n\n                    },\n                    LOAD_ORDER_COUNT: async (component, token) => {\n                            let resp =  await window.api.statistic.order.getCount(token);\n\n                            if (resp.status === 200) {\n                                    component.$store.dispatch(\"SET_STATISTIC_SALES_LIST\", resp.data);\n                            } else {\n                                    component.$store.dispatch(\"SET_STATISTIC_SALES_LIST\", {DATES: [\"0\"], VAL: [0]});\n                            }\n                    },\n                    LOAD_USERS: async (component, token) => {\n                            let resp =  await window.api.statistic.client.getCount(token);\n\n                            component.$store.dispatch(\"SET_STATISTIC_USER_LIST\", resp.data);\n\n                            await window.api.helper.sleep(1000);\n                            component.LOAD_USERS(component, token);\n                    },\n                    LOAD_USERS_ONLINE: async (component, token) => {\n                            let resp =  await window.api.statistic.client.getCountOnline(token);\n\n                            component.$store.dispatch(\"SET_STATISTIC_USER_ONLINE\", resp.data);\n\n                            await window.api.helper.sleep(1000);\n                            component.LOAD_USERS_ONLINE(component, token);\n                    }\n            }\n        };\n</script>\n\n<style lang=\"sass\" scoped>\n        .vh100\n                height: 100vh\n\n        .dowm-diagram\n                height: 100%\n</style>"]}]}